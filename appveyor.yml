image:
  - Visual Studio 2019
environment:
  matrix:
    # For Python versions available on Appveyor, see
    # https://www.appveyor.com/docs/windows-images-software/#python
    - PYTHON: "C:\\Python27"
    - PYTHON: "C:\\Python37"

install:
  # We need wheel installed to build wheels
  #- "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  #- "conda config --set always_yes yes --set changeps1 no"
  #- "conda update -q conda"
  #- "conda create -q -n test-environment python=%PYTHON_VERSION% numpy pycurl matplotlib pytest"
  #- "activate test-environment"
  #- "conda install pycurl"
  - "%PYTHON%\\python.exe -m pip install wheel"
  - "appveyor DownloadFile https://github.com/DigitalGlobe/gbdxtools-windows-binaries/raw/master/numpy-1.13.1+mkl-cp27-cp27m-win32.whl"
  - "%PYTHON%\\python.exe -m pip install numpy-1.13.1+mkl-cp27-cp27m-win32.whl"
  - "appveyor DownloadFile https://github.com/DigitalGlobe/gbdxtools-windows-binaries/raw/master/scipy-0.19.1-cp27-cp27m-win32.whl"
  - "%PYTHON%\\python.exe -m pip install scipy-0.19.1-cp27-cp27m-win32.whl"
  - "appveyor DownloadFile https://github.com/DigitalGlobe/gbdxtools-windows-binaries/raw/master/scikit_image-0.13.0-cp27-cp27m-win32.whl"
  - "%PYTHON%\\python.exe -m pip install scikit_image-0.13.0-cp27-cp27m-win32.whl"
  - "appveyor DownloadFile https://github.com/DigitalGlobe/gbdxtools-windows-binaries/raw/master/GDAL-2.1.3-cp27-cp27m-win32.whl"
  - "%PYTHON%\\python.exe -m pip install GDAL-2.1.3-cp27-cp27m-win32.whl"
  - "appveyor DownloadFile https://github.com/DigitalGlobe/gbdxtools-windows-binaries/raw/master/Shapely-1.5.17-cp27-cp27m-win32.whl"
  - "%PYTHON%\\python.exe -m pip install Shapely-1.5.17-cp27-cp27m-win32.whl"
  - "appveyor DownloadFile https://github.com/DigitalGlobe/gbdxtools-windows-binaries/raw/master/pyproj-1.9.5.1-cp27-cp27m-win32.whl"
  - "%PYTHON%\\python.exe -m pip install pyproj-1.9.5.1-cp27-cp27m-win32.whl"
  - "appveyor DownloadFile https://download.lfd.uci.edu/pythonlibs/t7epjj8p/pycurl-7.43.0.3-cp27-cp27m-win_amd64.whl"
  - "%PYTHON%\\python.exe -m pip install pycurl-7.43.0.3-cp27-cp27m-win_amd64.whl"
  - "%PYTHON%\\python.exe -m pip install matplotlib pytest"
  - "%PYTHON%\\python.exe -m pip install -r requirements.txt"

build: off

test_script:
  # Put your test command here.
  # If you don't need to build C extensions on 64-bit Python 3.3 or 3.4,
  # you can remove "build.cmd" from the front of the command, as it's
  # only needed to support those cases.
  # Note that you must use the environment variable %PYTHON% to refer to
  # the interpreter you're using - Appveyor does not do anything special
  # to put the Python version you want to use on PATH.
  #- "build.cmd %PYTHON%\\python.exe setup.py test"
  #- "set PATH=%MINICONDA%;%MINICONDA%\\Scripts;%PATH%"
  #- "activate test-environment"
  - "%PYTHON%\\python.exe unit_tests.py"

after_test:
  # This step builds your wheels.
  # Again, you only need build.cmd if you're building C extensions for
  # 64-bit Python 3.3/3.4. And you need to use %PYTHON% to get the correct
  # interpreter
  #- "build.cmd %PYTHON%\\python.exe setup.py bdist_wheel"
  - "%PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
  # bdist_wheel puts your built wheel in the dist directory
  - path: dist\*

#on_success:
#  You can use this step to upload your artifacts to a public website.
#  See Appveyor's documentation for more details. Or you can simply
